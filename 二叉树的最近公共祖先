// 参考文章： https://blog.csdn.net/nanhuaibeian/article/details/116595804

class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        //递归终止条件
        if (root == p || root == q || root == null) {
            return root;
        }
        //后序遍历逻辑：遍历左子树，遍历右子树
        //有返回值，需要对返回值进行逻辑处理
        TreeNode left = lowestCommonAncestor(root.left, p, q);
        TreeNode right = lowestCommonAncestor(root.right, p, q);

        if (left == null && right != null) {
            return right;
        }
        if (left != null && right == null) {
            return left;
        }
        if (left == null && right == null) {
            return null;
        }
        return root;
    }
}

